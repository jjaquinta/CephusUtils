package jo.cephus.core.data;import java.util.ArrayList;import java.util.List;import jo.audio.util.*;import org.json.simple.JSONObject;public class ShipDesignBean    implements IJSONAble{    public static final String COMMAND = "COMMAND";    public static final String PILOT = "PILOT";    public static final String NAVIGATOR = "NAVIGATOR";    public static final String ENGINEER = "ENGINEER";    public static final String SENSOR = "SENSOR";    public static final String MEDIC = "MEDIC";    public static final String STEWARD = "STEWARD";    public static final String TURRETGUNNER = "TURRETGUNNER";    public static final String BAYGUNNER = "BAYGUNNER";    public static final String SCREEN = "SCREEN";    public static final String SECURITY = "SECURITY";    public static final String FLIGHT = "FLIGHT";    public static final String MARINE = "MARINE";    public static final String OTHER = "OTHER";    private String mShipID;    private String mShipName;    private String mShipFunction;    private List<ShipComponentInstanceBean> mComponents = new ArrayList<>();    public ShipDesignBean()    {    }    public ShipDesignBean(JSONObject json)    {        fromJSON(json);    }    public JSONObject toJSON()    {        return ToJSONLogic.toJSONFromBean(this);    }    public void fromJSON(JSONObject o)    {        FromJSONLogic.fromJSON(this, o);    }    public String getShipID()    {        return mShipID;    }    public void setShipID(String shipID)    {        mShipID = shipID;    }    public String getShipName()    {        return mShipName;    }    public void setShipName(String shipName)    {        mShipName = shipName;    }    public String getShipFunction()    {        return mShipFunction;    }    public void setShipFunction(String shipFunction)    {        mShipFunction = shipFunction;    }    public List<ShipComponentInstanceBean> getComponents()    {        return mComponents;    }    public void setComponents(List<ShipComponentInstanceBean> components)    {        mComponents = components;    }}